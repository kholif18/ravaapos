<!-- views/items/index.ejs -->
  <div class="d-flex mb-3 flex-wrap gap-2">
    <h2 class="flex-grow-1">Item List</h2>

    <!-- Filter pencarian -->
    <form method="GET" action="/items/view" class="d-flex flex-grow-1 gap-2">
      <select name="category" class="form-select" onchange="this.form.submit()">
        <option value="">All Categories</option>
        <% categories.forEach(cat => { %>
          <option value="<%= cat.id %>" <%= selectedCategory == cat.id ? 'selected' : '' %>><%= cat.name %></option>
        <% }) %>
      </select>
      
      <input type="text" name="q" class="form-control flex-grow-1" placeholder="Search name, kode, or barcode..." value="<%= search || '' %>" />
      <button type="submit" class="btn btn-secondary flex-shrink-0 px-3"><i class="ti ti-search"></i> Search</button>

      <% if (selectedCategory || search) { %>
        <a href="/items/view" class="btn btn-outline-secondary flex-shrink-0 px-3">
          <i class="ti ti-x"></i> Reset
        </a>
      <% } %>
    </form>

    <button class="btn btn-primary" id="btnOpenModalCreate" data-bs-toggle="modal" data-bs-target="#modalCreate">
      + Add Item
    </button>
  </div>


  <!-- Tabel item -->
  <div class="card">
    <div class="card-body p-0" id="tableScrollContainer" style="max-height: 70vh; overflow-y: auto;">
      <table class="table table-hover mb-0" id="itemTable">
        <thead>
          <tr>
            <th data-sort="code">Code <span class="sort-icon"></span></th>
            <th data-sort="name">Name <span class="sort-icon"></span></th>
            <th data-sort="category">Category <span class="sort-icon"></span></th>
            <th data-sort="barcode">Barcode <span class="sort-icon"></span></th>
            <th data-sort="cost">Cost <span class="sort-icon"></span></th>
            <th data-sort="salePrice">Sale Price <span class="sort-icon"></span></th>
            <th data-sort="unit">Unit <span class="sort-icon"></span></th>
            <th>Aksi</th>
          </tr>
        </thead>

        <tbody id="itemTableBody">
          <!-- data akan di-load via JS -->
        </tbody>
      </table>
      <div id="loadingIndicator" class="text-center text-muted py-3">Loading...</div>
    </div>
  </div>


<!-- Modal Tambah Item -->
<div class="modal fade" id="modalCreate" tabindex="-1" aria-labelledby="modalCreateLabel" aria-hidden="true">
  <div class="modal-dialog">
    <form action="/items" method="POST" class="modal-content">
      <div class="modal-header bg-primary">
        <h5 class="modal-title text-white" id="modalCreateLabel">Tambah Item</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <!-- Nama -->
        <div class="mb-3">
          <input type="text" name="name" class="form-control" placeholder="Nama item" required>
        </div>

        <!-- Kode & Barcode -->
        <div class="mb-3">
          <input type="text" name="code" class="form-control" placeholder="Kode item" required>
        </div>
        <div class="mb-3">
          <input type="text" name="barcode" class="form-control" placeholder="Barcode (opsional)">
        </div>

        <!-- Unit & Category -->
        <div class="mb-3">
          <input type="text" name="unit" class="form-control" placeholder="Unit (mis. pcs, pkg)" required>
        </div>
        <div class="mb-3">
          <select name="categoryId" class="form-select">
            <option value="">Pilih Kategori</option>
            <% categories.forEach(cat => { %>
              <option value="<%= cat.id %>"><%= cat.name %></option>
            <% }) %>
          </select>
        </div>

        <!-- Default Qty & Service -->
        <div class="form-check form-switch mb-3">
          <input class="form-check-input" type="checkbox" name="defaultQtyOne" id="defaultQtyOne" checked>
          <label class="form-check-label" for="defaultQtyOne">Default Qty = 1</label>
        </div>
        <div class="form-check form-switch mb-3">
          <input class="form-check-input" type="checkbox" name="isService" id="isService">
          <label class="form-check-label" for="isService">Jasa (tidak menggunakan stok)</label>
        </div>

        <!-- Cost, Markup, Sale Price -->
        <div class="row">
          <div class="col-md-4 mb-3">
            <label>Harga Beli (Cost)</label>
            <input type="number" step="0.01" name="cost" id="inputCost" class="form-control" required>
          </div>
          <div class="col-md-4 mb-3">
            <label>Markup (%)</label>
            <input type="number" step="0.01" name="markup" id="inputMarkup" class="form-control" required>
          </div>
          <div class="col-md-4 mb-3">
            <label>Harga Jual</label>
            <input type="number" step="0.01" name="salePrice" id="inputSalePrice" class="form-control" required>
          </div>
        </div>

        <!-- Price Change Allowed -->
        <div class="form-check form-switch mb-3">
          <input class="form-check-input" type="checkbox" name="priceChangeAllowed" id="priceChangeAllowed">
          <label class="form-check-label" for="priceChangeAllowed">Harga bisa diubah saat penjualan</label>
        </div>
      </div>

      <div class="modal-footer">
        <button type="submit" class="btn btn-primary">Simpan</button>
      </div>
    </form>
  </div>
</div>

<!-- Modal edit item -->
<div class="modal fade" id="modalEdit" tabindex="-1" aria-labelledby="modalEditLabel" aria-hidden="true">
  <div class="modal-dialog">
    <form id="editItemForm" class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="modalEditLabel">Edit Item</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <input type="hidden" name="id" id="editItemId">
        <div class="mb-3">
          <input type="text" name="name" id="editName" class="form-control" required>
        </div>
        <div class="mb-3">
          <input type="number" name="price" id="editPrice" class="form-control" required>
        </div>
        <div class="mb-3">
          <select name="categoryId" id="editCategoryId" class="form-select">
            <option value="">Pilih Kategori</option>
            <% categories.forEach(cat => { %>
              <option value="<%= cat.id %>"><%= cat.name %></option>
            <% }) %>
          </select>
        </div>
      </div>
      <div class="modal-footer">
        <button type="submit" class="btn btn-primary">Update</button>
      </div>
    </form>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    function sortTableBy(column, ascending = true) {
      const tbody = document.getElementById('itemTableBody');
      const rows = Array.from(tbody.querySelectorAll('tr'));

      rows.sort((a, b) => {
        let aVal = a.querySelector(`td[data-column="${column}"]`)?.textContent?.trim() || '';
        let bVal = b.querySelector(`td[data-column="${column}"]`)?.textContent?.trim() || '';

        // Jika angka, sort sebagai angka
        if (!isNaN(aVal) && !isNaN(bVal)) {
          aVal = parseFloat(aVal);
          bVal = parseFloat(bVal);
        }

        if (aVal < bVal) return ascending ? -1 : 1;
        if (aVal > bVal) return ascending ? 1 : -1;
        return 0;
      });

      // Reset tbody
      tbody.innerHTML = '';
      rows.forEach(row => tbody.appendChild(row));
    }

    function updateSortIcons(column, ascending) {
      document.querySelectorAll('.sort-icon').forEach(icon => {
        icon.textContent = '';
      });

      const activeHeader = document.querySelector(`th[data-sort="${column}"] .sort-icon`);
      if (activeHeader) {
        activeHeader.textContent = ascending ? '↓' : '↑';
      }
    }
    // Klik header untuk sort
    const headers = document.querySelectorAll('#itemTable thead th[data-sort]');
    let currentSort = { column: null, ascending: true };

    // Klik header untuk sort
    headers.forEach(header => {
      header.addEventListener('click', () => {
        const column = header.dataset.sort;
        const ascending = (currentSort.column === column) ? !currentSort.ascending : true;
        currentSort = { column, ascending };
        sortTableBy(column, ascending);
        updateSortIcons(column, ascending);
      });
    });

    let offset = 0;
    const limit = 25;
    let loading = false;
    let done = false;

    function formatRupiah(num) {
      return 'Rp ' + Number(num).toLocaleString('id-ID');
    }

    async function loadMoreItems() {
      if (loading || done) return;
      loading = true;
      document.getElementById('loadingIndicator').textContent = 'Loading...';

      const params = new URLSearchParams(window.location.search);
      const category = params.get('category') || '';
      const search = params.get('q') || '';

      const res = await fetch(`/items/json?offset=${offset}&limit=${limit}&category=${category}&q=${search}`);

      if (!res.ok) return;
      const items = await res.json();

      if (items.length < limit) done = true;
      offset += items.length;

      const tbody = document.getElementById('itemTableBody');
      for (const item of items) {
        const row = document.createElement('tr');
        row.dataset.id = item.id;
        row.dataset.name = item.name;
        row.dataset.price = item.price;
        row.dataset.category = item.categoryId;

        row.innerHTML = `
          <td data-column="code">${item.code}</td>
          <td data-column="name">${item.name}</td>
          <td data-column="category">${item.category?.name || '-'}</td>
          <td data-column="barcode">${item.barcode || '-'}</td>
          <td data-column="cost">${formatRupiah(item.cost)}</td>
          <td data-column="salePrice">${formatRupiah(item.salePrice)}</td>
          <td data-column="unit">${item.unit}</td>
          <td>
            <button class="btn btn-sm btn-warning btn-edit" data-bs-toggle="modal" data-bs-target="#modalEdit"><i class="ti ti-pencil"></i></button>
            <button class="btn btn-sm btn-danger btn-delete"><i class="ti ti-trash  "></i></button>
          </td>`;
        tbody.appendChild(row);
      }

      document.getElementById('loadingIndicator').textContent = done ? 'Semua item dimuat' : '';
      loading = false;
    }

    // Infinite scroll
    document.getElementById('tableScrollContainer').addEventListener('scroll', () => {
      const container = document.getElementById('tableScrollContainer');
      if (container.scrollTop + container.clientHeight >= container.scrollHeight - 10) {
        loadMoreItems();
      }
    });

    loadMoreItems();

    // AJAX untuk kalkulasi harga jual dua arah
    const inputCost = document.getElementById('inputCost');
    const inputMarkup = document.getElementById('inputMarkup');
    const inputSalePrice = document.getElementById('inputSalePrice');

    let lastChanged = null; // untuk menghindari loop tak berujung

    function updateSalePrice() {
      if (lastChanged === 'sale') return; // hindari loop
      const cost = parseFloat(inputCost.value) || 0;
      const markup = parseFloat(inputMarkup.value) || 0;
      const sale = cost + (cost * markup / 100);
      lastChanged = 'markup';
      inputSalePrice.value = Number.isInteger(sale) ? sale : sale.toFixed(2);
    }

    function updateMarkup() {
      if (lastChanged === 'markup') return; // hindari loop
      const cost = parseFloat(inputCost.value) || 0;
      const sale = parseFloat(inputSalePrice.value) || 0;
      if (cost === 0) return; // hindari pembagian nol
      const markup = ((sale - cost) / cost) * 100;
      lastChanged = 'sale';
      inputMarkup.value = Number.isInteger(markup) ? markup : markup.toFixed(2);
    }

    inputCost.addEventListener('input', () => {
      lastChanged = null;
      updateSalePrice();
    });

    inputMarkup.addEventListener('input', () => {
      lastChanged = null;
      updateSalePrice();
    });

    inputSalePrice.addEventListener('input', () => {
      lastChanged = null;
      updateMarkup();
    });
  });
</script>